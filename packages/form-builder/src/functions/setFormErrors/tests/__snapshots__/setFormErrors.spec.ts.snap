// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`setFormErrors doesn't sets an error on unknown fields 1`] = `
Object {
  "section1": Object {
    "questions": Object {
      "questionChoiceButton": Object {
        "fieldOptions": Object {
          "type": "choiceButton",
        },
        "items": Array [
          Object {
            "text": "10h",
            "value": 10,
          },
          Object {
            "text": "11h",
            "value": 11,
          },
        ],
        "type": "select",
      },
      "questionChoiceButtonMultiple": Object {
        "fieldOptions": Object {
          "type": "choiceButton",
        },
        "items": Array [
          Object {
            "text": "10h",
            "value": 10,
          },
          Object {
            "text": "11h",
            "value": 11,
          },
        ],
        "type": "select",
      },
      "questionPassword": Object {
        "type": "password",
      },
      "questionPeriod": Object {
        "fieldOptions": Object {
          "notExist": Object {
            "errorMessages": "Sub field does not exist",
          },
        },
        "type": "period",
      },
      "questionString": Object {
        "fieldOptions": Object {
          "errorMessages": "Incorrect value",
        },
        "type": "text",
      },
    },
  },
}
`;

exports[`setFormErrors sets error messages on fields 1`] = `
Object {
  "section1": Object {
    "questions": Object {
      "questionChoiceButton": Object {
        "fieldOptions": Object {
          "errorMessages": Array [
            "Erreur 1",
            "Erreur 2",
          ],
          "type": "choiceButton",
        },
        "items": Array [
          Object {
            "text": "10h",
            "value": 10,
          },
          Object {
            "text": "11h",
            "value": 11,
          },
        ],
        "type": "select",
      },
      "questionChoiceButtonMultiple": Object {
        "fieldOptions": Object {
          "errorMessages": "Erreur string",
          "type": "choiceButton",
        },
        "items": Array [
          Object {
            "text": "10h",
            "value": 10,
          },
          Object {
            "text": "11h",
            "value": 11,
          },
        ],
        "type": "select",
      },
      "questionPassword": Object {
        "fieldOptions": Object {
          "errorMessages": "Champ requis",
        },
        "type": "password",
      },
      "questionPeriod": Object {
        "fieldOptions": Object {
          "from": Object {
            "errorMessages": Array [
              "Erreur questionPeriod 1",
              "Erreur questionPeriod 2",
            ],
          },
          "to": Object {
            "errorMessages": Array [
              "Erreur questionPeriod 1",
              "Erreur questionPeriod 2",
            ],
          },
        },
        "type": "period",
      },
      "questionString": Object {
        "fieldOptions": Object {
          "errorMessages": Array [
            "Erreur string 1",
            "Erreur string 2",
          ],
        },
        "type": "text",
      },
    },
  },
}
`;

exports[`setFormErrors skip error with bad type 1`] = `
Object {
  "section1": Object {
    "questions": Object {
      "questionChoiceButton": Object {
        "fieldOptions": Object {
          "type": "choiceButton",
        },
        "items": Array [
          Object {
            "text": "10h",
            "value": 10,
          },
          Object {
            "text": "11h",
            "value": 11,
          },
        ],
        "type": "select",
      },
      "questionChoiceButtonMultiple": Object {
        "fieldOptions": Object {
          "type": "choiceButton",
        },
        "items": Array [
          Object {
            "text": "10h",
            "value": 10,
          },
          Object {
            "text": "11h",
            "value": 11,
          },
        ],
        "type": "select",
      },
      "questionPassword": Object {
        "type": "password",
      },
      "questionPeriod": Object {
        "type": "period",
      },
      "questionString": Object {
        "type": "text",
      },
    },
  },
}
`;
